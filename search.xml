<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello world]]></title>
    <url>%2F2019%2F06%2F03%2Fhello-world%2F</url>
    <content type="text"><![CDATA[这里是小仓鼠的地盘]]></content>
      <categories>
        <category>课程总结</category>
      </categories>
      <tags>
        <tag>课程总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络认证课程总结]]></title>
    <url>%2F2019%2F06%2F03%2Fweb%2F</url>
    <content type="text"><![CDATA[网络认证课程总结 1.导言1.1 名词解释 Authentication——鉴别 Certification——认证 Identification——标识 PKI——公钥基础设施（Public Key Infrastructure）—以非对称密码的原理为基础设计和建设的、提供电子交易安全服务的一种网络应用的基础设施 CA——数字证书认证中心 Certificate——数字证书/PKI证书PKI系统提供什么? 真实性（标识与身份鉴别） 完整性（不被修改，没有错误）—纠错码、安全MAC/带密钥MAC、数字签名 机密性（隐私与保密） 非否认性（责任确定）2.密码学基础1. 概念 明文Plain Text—变换前的信息 密文Cipher Text—变换后的信息 密钥Key—确定变换的参数 密码算法Crypto Algorithm—一系列变换2. 对称密码算法–加密输入输出等长 古典密码学 代换技术 移位密码算法 单字母代换密码算法 置换技术 现代密码学 分组密码—等长block 工作模式：ECB(单独)、CBC(前XOR后)、CTR（密文=计数器加密XOR明文） DES算法–56bit密钥，64bit分组/雪崩效应 三重DES–112bit密钥（2个des密钥） AES—128bit分组 SM4算法（国产） 流密码—1bit1bit 祖冲之（ZUC）算法（国产）3. 非对称密码算法–速度慢 RSA算法 +加密前需要对明文进行填充 ElGamal ECC算法（椭圆曲线加密） 可以用小的多的密钥长度达到和RSA相同的安全性。4. 密钥交换、数字签名 Diffie-Hellman密钥交换5. Hash（消息摘要算法、杂凑算法）–输出定长，不可逆 数字签名 消息经过HASH后用私钥签名，签名结果和消息一同发送，接收方对消息hash和公钥解密结果比较。 MD4、MD5、SHA-1，Standard Hash Algorithm、SHA-256、SHA-384、SHA-512、SHA3 消息鉴别码（HMAC）–带密钥的hash 验证完整性、可靠性3.口令鉴别攻击类型： 被动/主动/暴力破解/字典/重放/中间人/并行会话 攻击EKE：用口令加密公钥传输，协商出一个由服务器生成的会话密钥。DH-EKEVerifier-based:服务器端不存储口令，只存储口令的变形能找到一个鉴别过程中的问题4.基于对称密码算法的协议存在的问题多个可证安全协议放在一起就可能不再安全Protocol4可信第三方 5.基于签名的（非对称） 6.Kerberos7.PKI基本结构 CA–签发证书、发布订户公钥 repository（资料库）—用于发布CA系统的各种公开信息 RA–注册机构，信息审查(管理员、审核员、录入员) 订户向RA提出申请。 RA授理订户申请，向CA提交订户申请 CA签发证书，并返回给订户 CA随时响应用户的查询 CRL Issuer—定期签发CRL OCSP 证书的基本结构：X500.DN 版本号，序列号，签发者，有效期，证书持有者信息，公钥信息、签名8.证书编码 编码方式DER。不依赖于计算机平台的无歧义的定义方式。 DN（证书持有者名称）由多个RDN构成 Sequence有序的。SET是无序的。 DER编码 第一个字节表示类型，第二个字节表示长度，第三个开始表示内容 长度的两种表示方式。Short Form（位表示为0XXX XXXX）。Long Form（第1位按位表示，后面n个字节表示实际长度） OID，用一串数字来表示所有事物的方式。 显式标签，在原有编码多包一层的方式，多了类型、长度。 隐式标签，替换原有编码。9.证书扩展 证书中带有更多的其他信息。每个扩展信息都可以由OID确定 Basic Constraints 是否是CA证书，CA允许深度 Authority Key Identifier CA标识符 Subject Key Identifier 订户标识符 Key Usage 密钥使用范围 Private Key Usage Period 私钥使用期限 Certificate Policies 说明证书等级（能签发的证书的等级） Policy Mappings 说明不同CA下不同等级的关系 Subject Alternative Name 订户额外名称信息 Issuer Alternative Name CA额外名称信息 Subject Directory Attributes 订户额外属性信息 Name Constraints CA签发证书的名字的列表 Policy Constraints 限制CP映射次数 Extended Key Usage 细化的证书用途 CRL Distribution Points 证书CRL获取点 Inhibit Any-Policy 可以有下N级的ANY-POLICY Freshest CRL 增量CRL获取点 10.证书撤销 CRL 完全CRL－下载所有 增量CRL－下载变化量 直接CRL－证书签发者签发CRL 间接CRL－CRL Issuer CRL分发点(CRL Distribution Point)－获取CRL的地址 OCSP 在线证书状态查询。需要数字签名 CRT 注意：OCSP、CRT仍然要依赖于CRL 二叉hash树 1次签名 短周期证书 11.PKI系统互联1.基本概念。 证书验证过程就是信任传递过程。 信任锚：信任传递的起点。 信任模型：PKI系统中的用户应该具有什么样的信任锚、以及在信任传递过程中的各种措施。 2.信任模型 单根CA——基本模型 基本模型：只有一个根CA。特点：验证证书简单。缺少扩展能力。 严格层次模型：只有信任锚有自签名证书。每个CA最多只有一个上级CA。 多根模型 证书信任列表（CTL） 用户自主处理 权威发布方式 鉴定证书Accreditation Certificate ACA和其他根CA都有自签名证书。作用仅仅是用来传递信任锚。 上面方式都改变了信任锚。 交叉认证Cross Certification 验证时，将对方的CA，视为我方的sub CA。可单向、可双向。要进行策略映射（CP，CP写在交叉证书中）。 扩展证书中限制：路径限制、命名限制、策略限制、策略映射 网状、Mesh 多次交叉认证。问题：各自为政进行交叉认证。能自主决定与哪个CA进行交叉认证。 桥CA（BCA） 专门处理交叉认证的机构。之签发交叉证书，不签发订户证书。引入了我们不希望的CA，扩大了范围。 CA Accrediration：对CA公司进行资格审查。 12.双证书体系与密钥托管 为什么要有双证书？ 机密性的私钥应该托管、备份(政府监听需要,用户恢复需要)。数字签名私钥应该是用户自主控制的。为了支持法律法规要求，PKI区分了加密证书和签名证书。 加密证书：密钥KMC生成。 签名证书：密钥由订户自己生成。 Key management center(KMC)—-key recovery 负责管理用户用于加解密的密钥。 双证书流程（4种）。 流程1：KMC与用户直接交流。 流程2：CA申请加密公钥，私钥KMC与用户直接通信。 流程3：临时公钥保护。依赖对CA的信任，要求CA/KMC在线通信（？？，为啥）。 流程4：KMC将加密密钥放入USB Key。USB Key使用pin码保护，pin码放在信封中。 双证书的实现和使用 Key Usage扩展。True，关键扩展 PKI应用系统管理困难，应用很难开展。 双证书体系的讨论—是一种管理措施。 电子签名法—POP：私钥的拥有证明。 PKCS#10格式：用户信息签名发送CA，CA公钥解密验证。恶意替换攻击。 签名密钥：同上。恶意替换攻击。 加密密钥：1.直接：CA用公钥加密随机信息让用户解密。2.间接：CA公钥加密证书。 密钥协商密钥：在线通信。RA用申请中的公钥同用户协商session key 流程1支持所有POP检查方式。流程2.3支持加密间接方式。13.TLS协议—目前PKI最重要的应用。 掌握流程图及各层功能。 Record层：分块——压缩（实际不使用）——计算MAC（流密码、分组密码、AEAD(同时加密校验)）——加密 Handshake层：Handshake基本过程。 变形。 变形1：server请求client证书，多了CertificateRequest、Certificate、CertificatevVerify 变形2：server证书不能用来签名。多了ServerKeyExchage 变形3：会话重用。SessionId 14.PKI API（略）15.入侵容忍CA系统 秘密分享： Access structure（n选f组合数记为l） Shamir’s Secret Sharing（f项多项式曲线） 方案：门限密码分散私钥到各个服务器。 ITTC d简单拆分。服务器增加减少，调整密钥麻烦。计算简单 ICNP 利用拉格朗日公式。服务器增加减少，调整密钥方便。计算麻烦 16 证书透明化（CT）方案—-快速发现虚假证书 方案的提出解决虚假证书问题。用户快速发现虚假证书的一种方式。 原理：公开日志。 组成：公开日志服务器（公开日志—只增、可审计）、监视员、审计员 增强的证书验证：收到证书并验证通过之后，公开日志服务器会向提交者返回一个SCT凭据（签名的证书时间戳），用户不仅要验证证书，还要验证CT 性能：对虚假证书反应更加迅速，更容易对CA行为进行监控。 17.多种类型的身份鉴别机制 What you know(口令) 口令激活PKI（容易遭受攻击，对服务器安全更加敏感） 虚拟软令牌 私钥用口令加密，被加密的私钥存放于服务器，使用时通过口令验证身份，协商会话秘钥，获得数据解密得私钥。 虚拟智能卡 d=d1+d2。d1是用户口令，d2是存储在服务器上的秘密元素。 使用时用户通过口令向服务器验证身份，双方协商会话秘钥 服务器端：c2=m^(d2)mod N，并将其发送给用户 用户端：c=c2 ^(d1)=m^(d1)mod N=m^(d)mod 基于手机密码模块——将用户部分存放至手机中 What you have（USB KEY、TOKEN、手机验证） What you are（生物特征） Mixed（多因素身份鉴别） 其安全性不能低于通常情况下的鉴别机制 somebody you know（紧急鉴别）18.OAuth &amp;OpenId18.1 单点登录（SSO） Kerberos–典型的单点登录 SAML18.2 OAuth–授权（openId的基础）基于非对称、签名 Abstract Protocol Flow（此处应该有图） client向resource owner发出authorization request，返回authorization grant。 client向authorization server发出authorization grant，返回access token。 client向resource server发出access token，返回protected server。 Authorization code Flow(此处有图) A:client重定向resource owner的user-agent到authorization终端。 C:authorization server使用前面提供的重定向URI将user-agent重定向回client。重定向URI包括一个authorization code和client先前提供的本地状态。 D:client通过authorization code从authorization server的令牌端点请求访问令牌。在发出请求时，client将使用授权服务器进行身份验证。 E：授权服务器使用访问令牌和刷新令牌（可选）进行响应。授权服务器对客户端进行身份验证，验证授权代码，并确保收到的重定向URI与步骤（c）中用于重定向客户端的URI匹配。 实例图 CSRF攻击18.3 OpenId–鉴别、认证 授权码鉴别 实例图 所有令牌从令牌端点获得 隐式鉴别 所有令牌从授权端点获得 混合鉴别 以上3种区别就是依赖方获得令牌方式不同。 身份验证信息的返回包含在ID令牌中。19.Eduroam 定义：专为科研院所和学校开发的全球无限漫游认证服务。 Eduroam协议过程 EAP（可扩展鉴别协议）–由于实体之间通信协议不同，但都支持这种鉴别协议。 移动设备和AP(无线热点)之间通信采用802.1x协议，AP和服务器、服务器和服务器之间通信采用RADIUS协议。AP作为两种协议的中继，使鉴别服务器和移动终端之间建立EAP逻辑信道。 EAP协议实现方法—EAP-TTLS协议。 TLS握手阶段—鉴别服务器和移动终端之间的TLS隧道 隧道内通信阶段—用户身份鉴别（移动终端直接将用户名和口令明文发送给鉴别服务器） 具体过程：EAP请求由AP发起，之后AP仅转发EAP数据包以及判断EAP协议是否结束。移动终端和鉴别服务器进行完整的TLS协商。最后鉴别服务器发送成功或者失败的EAP数据包以表示EAP协议的结束。 使用DNS树。 保证RADIUS数据包能从用户访问机构的服务器到达用户所处机构的服务器。将用户身份发送给用户所在机构验证其身份。20.FIDO（Fast Identity Online） 对于移动终端安全性的不信任 在服务器端将用户与移动终端的可信环境进行身份绑定，将用户与服务器之间的直接鉴别转变为两段式鉴别：移动终端鉴别用户，网络鉴别移动终端。 典型方案：FIDO、IFAAUAF(Universal Authentication Framework) 无密码、多因素认证U2F(Universal 2nd Factor) 第二因素过程 注册：用户用生物信息等解锁FIDO鉴别器，用户设备产生公私钥对，将公钥发送给服务器，服务器将公钥和用户信息绑定。 登录：客户端选择用户生物身份信息对应的私钥发送签名消息，服务器用相应的公钥验证。21.PKI信任机制的安全增强方案 证书透明化：引入CT，以审计CA 限制CA权力（签发的能力） Certlock:TLS服务器只会向同一个国家申请证书。记录访问时证书的CA信息，再次登录不同时比较CA国家，不同则警告 Cage:限制CA可以签发的顶级域名（CA签发范围的限定规则：CA在相应的顶级域名中至少签发过一个证书） DANE：为DNS中的数据增加数字签名 DNS相关概念：DNS是以域名为索引的，关于主机信息的分布式数据库 CAA:是事前的，用以签发证书之前CA的检查 浏览器端实施检测（判断是否为虚假证书）]]></content>
      <categories>
        <category>课程总结</category>
      </categories>
      <tags>
        <tag>课程总结</tag>
      </tags>
  </entry>
</search>
